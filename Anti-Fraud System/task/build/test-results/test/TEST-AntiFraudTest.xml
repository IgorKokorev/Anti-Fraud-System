<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AntiFraudTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2023-06-02T11:54:27" hostname="IKOKSHP" time="23.42">
  <properties/>
  <testcase name="start" classname="AntiFraudTest" time="23.42"/>
  <system-out><![CDATA[?[1;31m
Start test 1?[0m
?[0;34m
?[0m?[0;34m  .   ____          _            __ _ _
?[0m?[0;34m /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
?[0m?[0;34m( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
?[0m?[0;34m \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
?[0m?[0;34m  '  |____| .__|_| |_|_| |_\__, | / / / /
?[0m?[0;34m =========|_|==============|___/=/_/_/_/
?[0m?[0;34m :: Spring Boot ::                (v2.7.0)
?[0m?[0;34m
?[0m?[0;34m2023-06-02 13:54:27.749  INFO 13912 --- [    Test worker] antifraud.AntiFraudApplication           : Starting AntiFraudApplication using Java 17.0.6 on iKoksHP with PID 13912 (started by ikoko in E:\OneDrive\Coding\Anti-Fraud System1\Anti-Fraud System\task)
?[0m?[0;34m2023-06-02 13:54:27.752  INFO 13912 --- [    Test worker] antifraud.AntiFraudApplication           : No active profile set, falling back to 1 default profile: "default"
?[0m?[0;34m2023-06-02 13:54:28.852  INFO 13912 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
?[0m?[0;34m2023-06-02 13:54:28.928  INFO 13912 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 62 ms. Found 1 JPA repository interfaces.
?[0m?[0;34m2023-06-02 13:54:29.736  INFO 13912 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 28852 (http)
?[0m?[0;34m2023-06-02 13:54:29.748  INFO 13912 --- [    Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
?[0m?[0;34m2023-06-02 13:54:29.748  INFO 13912 --- [    Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.63]
?[0m?[0;34m2023-06-02 13:54:29.862  INFO 13912 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
?[0m?[0;34m2023-06-02 13:54:29.862  INFO 13912 --- [    Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2072 ms
?[0m?[0;34m2023-06-02 13:54:30.050  INFO 13912 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
?[0m?[0;34m2023-06-02 13:54:30.347  INFO 13912 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
?[0m?[0;34m2023-06-02 13:54:30.367  INFO 13912 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:file:../service_db'
?[0m?[0;34m2023-06-02 13:54:30.592  INFO 13912 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
?[0m?[0;34m2023-06-02 13:54:30.669  INFO 13912 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.9.Final
?[0m?[0;34m2023-06-02 13:54:30.905  INFO 13912 --- [    Test worker] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
?[0m?[0;34m2023-06-02 13:54:31.098  INFO 13912 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
?[0m?[0;34mHibernate: create table users (id bigint generated by default as identity, is_non_locked boolean not null, name varchar(255) not null, password varchar(255) not null, role varchar(255) not null, username varchar(255) not null, primary key (id))
?[0m?[0;34m2023-06-02 13:54:31.835  INFO 13912 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
?[0m?[0;34m2023-06-02 13:54:31.845  INFO 13912 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
?[0m?[0;34m2023-06-02 13:54:32.295  WARN 13912 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
?[0m?[0;34m2023-06-02 13:54:32.511  INFO 13912 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3f030217, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2fca9fae, org.springframework.security.web.context.SecurityContextPersistenceFilter@17635531, org.springframework.security.web.header.HeaderWriterFilter@136a4800, org.springframework.security.web.authentication.logout.LogoutFilter@6bbb3280, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7e1953f7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@396519b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3e0e3048, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1104ad6a, org.springframework.security.web.session.SessionManagementFilter@7f08c343, org.springframework.security.web.access.ExceptionTranslationFilter@7c0b792e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@11678469]
?[0m?[0;34m2023-06-02 13:54:33.185  INFO 13912 --- [    Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 14 endpoint(s) beneath base path '/actuator'
?[0m?[0;34m2023-06-02 13:54:33.233  INFO 13912 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 28852 (http) with context path ''
?[0m?[0;34m2023-06-02 13:54:33.247  INFO 13912 --- [    Test worker] antifraud.AntiFraudApplication           : Started AntiFraudApplication in 5.896 seconds (JVM running for 6.727)
?[0m?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/user'
?[0m?[0;34mrequest: '{
?[0m?[0;34m   "name": "John Doe 1",
?[0m?[0;34m   "password": "oa3VvqnLxW"
?[0m?[0;34m}'
?[0m?[0;34mExpectations: 'In case of wrong data in request, endpoint must respond with BAD REQUEST  status (400).'
?[0m?[0;34m-----
?[0;34m2023-06-02 13:54:33.607  INFO 13912 --- [io-28852-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
?[0m?[0;34m2023-06-02 13:54:33.608  INFO 13912 --- [io-28852-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
?[0m?[0;34m2023-06-02 13:54:33.610  INFO 13912 --- [io-28852-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
?[0m?[1;31m
Start test 2?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/user'
?[0m?[0;34mrequest: '{
?[0m?[0;34m   "name": "John Doe 2",
?[0m?[0;34m   "username": "johndoe1"
?[0m?[0;34m}'
?[0m?[0;34mExpectations: 'In case of wrong data in request, endpoint must respond with BAD REQUEST  status (400).'
?[0m?[0;34m-----
?[0m?[1;31m
Start test 3?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/user'
?[0m?[0;34mrequest: '{
?[0m?[0;34m   "name": "John Doe 1",
?[0m?[0;34m   "username": "johndoe1",
?[0m?[0;34m   "password": "oMoa3VvqnLxW"
?[0m?[0;34m}'
?[0m?[0;34mExpectations: 'If user successfully added, endpoint must respond with HTTP CREATED status (201) '
?[0m?[0;34m-----
?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: select count(*) as col_0_0_ from users userdb0_
?[0m?[0;34mHibernate: insert into users (id, is_non_locked, name, password, role, username) values (default, ?, ?, ?, ?, ?)
?[0m?[1;31m
Start test 4?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/list'
?[0m?[0;34mExpectations: 'Endpoint must respond with HTTP OK status (200) and body with array of objects representing the users sorted by ID in ascending order.'
?[0m?[0;34m-----
?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ order by userdb0_.id asc
?[0m?[1;31m
Start test 5?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/user'
?[0m?[0;34mrequest: '{
?[0m?[0;34m   "name": "John Doe 1",
?[0m?[0;34m   "username": "johndoe1",
?[0m?[0;34m   "password": "oMoa3VvqnLxW"
?[0m?[0;34m}'
?[0m?[0;34mExpectations: 'If user successfully added, endpoint must respond with HTTP CREATED status (201) '
?[0m?[0;34m-----
?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: select count(*) as col_0_0_ from users userdb0_
?[0m?[0;34mHibernate: insert into users (id, is_non_locked, name, password, role, username) values (default, ?, ?, ?, ?, ?)
?[0m?[1;31m
Start test 6?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/list'
?[0m?[0;34mExpectations: 'Endpoint must respond with HTTP OK status (200) and body with array of objects representing the users sorted by ID in ascending order.'
?[0m?[0;34m-----
?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ order by userdb0_.id asc
?[0m?[1;31m
Start test 7?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/list'
?[0m?[0;34mExpectations: 'A user with incorrect credentials is not allowed'
?[0m?[0;34m-----
?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 8?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/list'
?[0m?[0;34mExpectations: 'A user with incorrect credentials is not allowed'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 9?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'Merchant after registration must be LOCKED'
?[0m?[0;34m-----
?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 10?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/access'
?[0m?[0;34mExpectations: 'A user johndoe1 must be UNLOCKED'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: update users set is_non_locked=?, name=?, password=?, role=?, username=? where id=?
?[0m?[1;31m
Start test 11?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'A user johndoe1 must be UNLOCKED'
?[0m?[0;34m-----
?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 12?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mrequest: 'amount = 1'
?[0m?[0;34mExpectations: 'Result validating of Transaction must be 'ALLOWED''
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 13?[0m
?[0;34m2023-06-02 13:54:35.326  INFO 13912 --- [       Thread-4] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
?[0m?[0;34m2023-06-02 13:54:35.330  INFO 13912 --- [       Thread-4] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
?[0m?[0;34m2023-06-02 13:54:35.459  INFO 13912 --- [       Thread-4] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
?[0;34m
?[0m?[0;34m  .   ____          _            __ _ _
?[0m?[0;34m /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
?[0m?[0;34m( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
?[0m?[0;34m \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
?[0m?[0;34m  '  |____| .__|_| |_|_| |_\__, | / / / /
?[0m?[0;34m =========|_|==============|___/=/_/_/_/
?[0m?[0;34m :: Spring Boot ::                (v2.7.0)
?[0m?[0;34m
?[0m?[0;34m2023-06-02 13:54:45.895  INFO 13912 --- [    Test worker] antifraud.AntiFraudApplication           : Starting AntiFraudApplication using Java 17.0.6 on iKoksHP with PID 13912 (started by ikoko in E:\OneDrive\Coding\Anti-Fraud System1\Anti-Fraud System\task)
?[0m?[0;34m2023-06-02 13:54:45.896  INFO 13912 --- [    Test worker] antifraud.AntiFraudApplication           : No active profile set, falling back to 1 default profile: "default"
?[0m?[0;34m2023-06-02 13:54:46.230  INFO 13912 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
?[0m?[0;34m2023-06-02 13:54:46.241  INFO 13912 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 11 ms. Found 1 JPA repository interfaces.
?[0m?[0;34m2023-06-02 13:54:46.340  INFO 13912 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 28852 (http)
?[0m?[0;34m2023-06-02 13:54:46.340  INFO 13912 --- [    Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
?[0m?[0;34m2023-06-02 13:54:46.341  INFO 13912 --- [    Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.63]
?[0m?[0;34m2023-06-02 13:54:46.375  INFO 13912 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
?[0m?[0;34m2023-06-02 13:54:46.375  INFO 13912 --- [    Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 476 ms
?[0m?[0;34m2023-06-02 13:54:46.420  INFO 13912 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
?[0m?[0;34m2023-06-02 13:54:46.435  INFO 13912 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
?[0m?[0;34m2023-06-02 13:54:46.435  INFO 13912 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:file:../service_db'
?[0m?[0;34m2023-06-02 13:54:46.475  INFO 13912 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
?[0m?[0;34m2023-06-02 13:54:46.481  INFO 13912 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
?[0m?[0;34m2023-06-02 13:54:46.522  INFO 13912 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
?[0m?[0;34m2023-06-02 13:54:46.522  INFO 13912 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
?[0m?[0;34m2023-06-02 13:54:46.601  WARN 13912 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
?[0m?[0;34m2023-06-02 13:54:46.639  INFO 13912 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5f171392, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@655295bd, org.springframework.security.web.context.SecurityContextPersistenceFilter@5a513627, org.springframework.security.web.header.HeaderWriterFilter@3448a248, org.springframework.security.web.authentication.logout.LogoutFilter@2fe12ec3, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@678a7489, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@41413c5a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@306a9cd8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@62cbe18c, org.springframework.security.web.session.SessionManagementFilter@8788194, org.springframework.security.web.access.ExceptionTranslationFilter@489a722d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@329cef32]
?[0m?[0;34m2023-06-02 13:54:46.839  INFO 13912 --- [    Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 14 endpoint(s) beneath base path '/actuator'
?[0m?[0;34m2023-06-02 13:54:46.862  INFO 13912 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 28852 (http) with context path ''
?[0m?[0;34m2023-06-02 13:54:46.869  INFO 13912 --- [    Test worker] antifraud.AntiFraudApplication           : Started AntiFraudApplication in 0.993 seconds (JVM running for 20.349)
?[0m?[1;31m
Start test 14?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/list'
?[0m?[0;34mExpectations: 'After restart user must exist'
?[0m?[0;34m-----
?[0;34m2023-06-02 13:54:46.875  INFO 13912 --- [io-28852-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
?[0m?[0;34m2023-06-02 13:54:46.875  INFO 13912 --- [io-28852-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
?[0m?[0;34m2023-06-02 13:54:46.876  INFO 13912 --- [io-28852-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ order by userdb0_.id asc
?[0m?[1;31m
Start test 15?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/user'
?[0m?[0;34mrequest: '{
?[0m?[0;34m   "name": "John Doe 1",
?[0m?[0;34m   "username": "johndoe1",
?[0m?[0;34m   "password": "oMoa3VvqnLxW"
?[0m?[0;34m}'
?[0m?[0;34mExpectations: 'In case of an attempt to register an existing user, endpoint must respond with HTTP CONFLICT status (409).'
?[0m?[0;34m-----
?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 16?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/user'
?[0m?[0;34mrequest: '{
?[0m?[0;34m   "name": "John Doe 2",
?[0m?[0;34m   "username": "johndoe2",
?[0m?[0;34m   "password": "oMoa5VvqnLxW"
?[0m?[0;34m}'
?[0m?[0;34mExpectations: 'If user successfully added, endpoint must respond with HTTP CREATED status (201) '
?[0m?[0;34m-----
?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: select count(*) as col_0_0_ from users userdb0_
?[0m?[0;34mHibernate: insert into users (id, is_non_locked, name, password, role, username) values (default, ?, ?, ?, ?, ?)
?[0m?[1;31m
Start test 17?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/list'
?[0m?[0;34mExpectations: 'Endpoint must respond with HTTP OK status (200) and body with array of objects representing the users sorted by ID in ascending order.'
?[0m?[0;34m-----
?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ order by userdb0_.id asc
?[0m?[1;31m
Start test 18?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mrequest: 'amount = 199'
?[0m?[0;34mExpectations: 'Result validating of Transaction must be 'ALLOWED''
?[0m?[0;34m-----
?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 19?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mrequest: 'amount = 200'
?[0m?[0;34mExpectations: 'Result validating of Transaction must be 'ALLOWED''
?[0m?[0;34m-----
?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 20?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mrequest: 'amount = 201'
?[0m?[0;34mExpectations: 'Result validating of Transaction must be 'MANUAL_PROCESSING''
?[0m?[0;34m-----
?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 21?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mrequest: 'amount = 1499'
?[0m?[0;34mExpectations: 'Result validating of Transaction must be 'MANUAL_PROCESSING''
?[0m?[0;34m-----
?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 22?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mrequest: 'amount = 1500'
?[0m?[0;34mExpectations: 'Result validating of Transaction must be 'MANUAL_PROCESSING''
?[0m?[0;34m-----
?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 23?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mrequest: 'amount = 1501'
?[0m?[0;34mExpectations: 'Result validating of Transaction must be 'PROHIBITED''
?[0m?[0;34m-----
?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 24?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mrequest: 'amount = 2000'
?[0m?[0;34mExpectations: 'Result validating of Transaction must be 'PROHIBITED''
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 25?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mrequest: 'amount = -1'
?[0m?[0;34mExpectations: 'Response status must be 'Bad request''
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 26?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mrequest: 'amount = 0'
?[0m?[0;34mExpectations: 'Response status must be 'Bad request''
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 27?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mrequest: 'amount = null'
?[0m?[0;34mExpectations: 'Response status must be 'Bad request''
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 28?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mrequest: 'amount = ""'
?[0m?[0;34mExpectations: 'Response status must be 'Bad request''
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 29?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mrequest: 'amount = " "'
?[0m?[0;34mExpectations: 'Response status must be 'Bad request''
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 30?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mrequest: 'empty body'
?[0m?[0;34mExpectations: 'Response status must be 'Bad request''
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 31?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/user'
?[0m?[0;34mrequest: '/api/auth/user/somebody'
?[0m?[0;34mExpectations: 'If a user is not found, respond with HTTP Not Found status (404).'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 32?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/user'
?[0m?[0;34mrequest: '/api/auth/user/johndoe1'
?[0m?[0;34mExpectations: 'The endpoint must delete the user and respond with HTTP OK status (200)'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: delete from users where id=?
?[0m?[1;31m
Start test 33?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/list'
?[0m?[0;34mExpectations: 'User 'johndoe1' must be delete'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ order by userdb0_.id asc
?[0m?[1;31m
Start test 34?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/role'
?[0m?[0;34mExpectations: 'If a user is not found, endpoint must respond with the HTTP Not Found status (404).'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 35?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/role'
?[0m?[0;34mExpectations: 'If a role is not found, endpoint must respond with the HTTP Bad Request status (400).'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 36?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/role'
?[0m?[0;34mExpectations: 'If a role is ADMINISTRATOR, endpoint must respond with the HTTP Bad Request status (400).'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 37?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/role'
?[0m?[0;34mExpectations: 'If a role successfully changed, respond with the HTTP OK status (200)'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: update users set is_non_locked=?, name=?, password=?, role=?, username=? where id=?
?[0m?[1;31m
Start test 38?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/role'
?[0m?[0;34mExpectations: 'If a role already assigned to a user, endpoint must respond with the HTTP Conflict status (409).'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 39?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/access'
?[0m?[0;34mExpectations: 'A user johndoe2 must be UNLOCKED'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: update users set is_non_locked=?, name=?, password=?, role=?, username=? where id=?
?[0m?[1;31m
Start test 40?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/list'
?[0m?[0;34mExpectations: 'Role for user 'johndoe2' must be changed to SUPPORT'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ order by userdb0_.id asc
?[0m?[1;31m
Start test 41?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'Role MERCHANT must be removed from user johndoe2!'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 42?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/user'
?[0m?[0;34mrequest: '{
?[0m?[0;34m   "name": "John Doe 3",
?[0m?[0;34m   "username": "johndoe3",
?[0m?[0;34m   "password": "oMoa6VvqnLxW"
?[0m?[0;34m}'
?[0m?[0;34mExpectations: 'If user successfully added, endpoint must respond with HTTP CREATED status (201) '
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: select count(*) as col_0_0_ from users userdb0_
?[0m?[0;34mHibernate: insert into users (id, is_non_locked, name, password, role, username) values (default, ?, ?, ?, ?, ?)
?[0m?[1;31m
Start test 43?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'MERCHANT user after registration must be LOCKED'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 44?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/access'
?[0m?[0;34mExpectations: 'A user johndoe3 must be UNLOCKED'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: update users set is_non_locked=?, name=?, password=?, role=?, username=? where id=?
?[0m?[1;31m
Start test 45?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'A user johndoe3 must be UNLOCKED'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 46?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/access'
?[0m?[0;34mExpectations: 'A user johndoe3 must be LOCKED'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: update users set is_non_locked=?, name=?, password=?, role=?, username=? where id=?
?[0m?[1;31m
Start test 47?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'A user johndoe3 must be LOCKED'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 48?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/access'
?[0m?[0;34mExpectations: 'A user johndoe3 must be UNLOCKED'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[0;34mHibernate: update users set is_non_locked=?, name=?, password=?, role=?, username=? where id=?
?[0m?[1;31m
Start test 49?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'A user with role ADMINISTRATOR must not have access to /api/antifraud/transaction'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 50?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction/'
?[0m?[0;34mExpectations: 'A user with role ADMINISTRATOR must not have access to /api/antifraud/transaction/'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 51?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'A user with role SUPPORT must not have access to /api/antifraud/transaction'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 52?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction/'
?[0m?[0;34mExpectations: 'A user with role SUPPORT must not have access to /api/antifraud/transaction/'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 53?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'A user with role ANONYMOUS must not have access to /api/antifraud/transaction'
?[0m?[0;34m-----
?[0m?[1;31m
Start test 54?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/user'
?[0m?[0;34mExpectations: 'A user with role ANONYMOUS must not have access to DELETE /api/auth/user'
?[0m?[0;34m-----
?[0m?[1;31m
Start test 55?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/user'
?[0m?[0;34mExpectations: 'A user with role SUPPORT must not have access to DELETE /api/auth/user'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 56?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/user'
?[0m?[0;34mExpectations: 'A user with role MERCHANT must not have access to DELETE /api/auth/user'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 57?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/user'
?[0m?[0;34mExpectations: 'A user with role MERCHANT must not have access to DELETE /api/auth/user'
?[0m?[0;34m-----
?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 58?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/list'
?[0m?[0;34mExpectations: 'A user with role ANONYMOUS must not have access to /api/auth/list'
?[0m?[0;34m-----
?[0m?[1;31m
Start test 59?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/list'
?[0m?[0;34mExpectations: 'A user with role MERCHANT must not have access to /api/auth/list'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 60?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/access'
?[0m?[0;34mExpectations: 'A user with role MERCHANT must not have access to /api/auth/access'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 61?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/access'
?[0m?[0;34mExpectations: 'A user with role SUPPORT must not have access to /api/auth/access'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 62?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/access/'
?[0m?[0;34mExpectations: 'A user with role MERCHANT must not have access to /api/auth/access/'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 63?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/access/'
?[0m?[0;34mExpectations: 'A user with role SUPPORT must not have access to /api/auth/access/'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 64?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/access'
?[0m?[0;34mExpectations: 'A user with role ANONYMOUS must not have access to /api/auth/access'
?[0m?[0;34m-----
?[0m?[1;31m
Start test 65?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/role'
?[0m?[0;34mExpectations: 'A user with role SUPPORT must not have access to /api/auth/role'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 66?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/role'
?[0m?[0;34mExpectations: 'A user with role MERCHANT must not have access to /api/auth/role'
?[0m?[0;34m-----
?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 67?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/role'
?[0m?[0;34mExpectations: 'A user with role ANONYMOUS must not have access to /api/auth/role'
?[0m?[0;34m-----
?[0m?[1;31m
Start test 68?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/role/'
?[0m?[0;34mExpectations: 'A user with role SUPPORT must not have access to /api/auth/role/'
?[0m?[0;34m-----
?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m?[1;31m
Start test 69?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/role/'
?[0m?[0;34mExpectations: 'A user with role MERCHANT must not have access to /api/auth/role/'
?[0m?[0;34m-----
?[0;34mHibernate: select userdb0_.id as id1_0_, userdb0_.is_non_locked as is_non_l2_0_, userdb0_.name as name3_0_, userdb0_.password as password4_0_, userdb0_.role as role5_0_, userdb0_.username as username6_0_ from users userdb0_ where upper(userdb0_.username)=upper(?)
?[0m]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
